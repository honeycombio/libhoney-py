version: 2.1

executors:
  python:
    docker:
      - image: cimg/python:3.8
  github:
    docker:
      - image: cibuilds/github:0.13.0

commands:
  setup:
    steps:
      - checkout
      - run:
          name: poetry_install
          command: poetry install --no-root --no-ansi
  run_lint:
    steps:
      - run:
          name: run_lint
          command: poetry run pylint --rcfile=pylint.rc libhoney
      - run:
          name: run_pycodestyle
          command: poetry run pycodestyle libhoney --max-line-length=140
  run_tests:
    steps:
      - run:
          name: run_tests
          command: poetry run coverage run -m unittest discover -v
  run_coverage:
    steps:
      - run:
          name: coverage_report
          command: poetry run coverage report --include="libhoney/*"
      - run:
          name: coverage_html
          command: poetry run coverage html --include="libhoney/*"

  runtests:
    steps:
      - setup
      - run_lint
      - run_tests
      - run_coverage
      - store_artifacts:
          path: htmlcov
  build:
    steps:
      - setup
      - run: mkdir -p ~/artifacts
      - run:
          name: poetry_build
          command: poetry build
      - run:
          name: copy_binaries
          command: cp dist/* ~/artifacts
      - persist_to_workspace:
          root: ~/
          paths:
            - artifacts
      - store_artifacts:
          path: ~/artifacts

  makesmoke:
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Spin up example in Docker
          command: make smoke
      - run:
          name: Spin down example
          command: make unsmoke

  publish_github:
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Artifacts being published"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            ls -l ~/artifacts/*
      - run:
          name: ghr_draft
          command: ghr -draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ~/artifacts

  publish_pypi:
    steps:
      - setup
      - run:
          name: poetry_publish
          command: poetry publish --build -u honeycomb -p ${PYPI_PASSWORD}

# required as all of the jobs need to have a tag filter for some reason
tag_filters: &tag_filters
  filters:
    tags:
      only: /.*/

jobs:
  test:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<<parameters.python-version>>
    steps:
      - runtests
  build:
    executor: python
    steps:
      - build
  smoke_test:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - makesmoke

  publish_github:
    executor: github
    steps:
      - publish_github
  publish_pypi:
    executor: python
    steps:
      - publish_pypi

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test:
          matrix:
            parameters:
              python-version: ["3.7", "3.8", "3.9", "3.10"]
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - test

  build_libhoney:
    jobs:
      - test:
          matrix:
            parameters:
              python-version: ["3.7", "3.8", "3.9", "3.10"]
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - test
      - smoke_test:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - publish_github:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
          filters:
            tags:
              only: /v[0-9].*/
            branches:
              ignore: /.*/
      - publish_pypi:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
          filters:
            tags:
              only: /v[0-9].*/
            branches:
              ignore: /.*/
